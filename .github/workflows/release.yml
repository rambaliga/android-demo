name: Deploy to Playstore

on:
 push:
   branches: [main]
 pull_request:
   branches: [main]

jobs:
   # test:
   #  name: Unit Test
   #  runs-on: ubuntu-latest

   #  steps:
   #    - uses: actions/checkout@v4

   #    - name: Setup JDK 17
   #      uses: actions/setup-java@v4
   #      with:
   #        distribution: 'temurin'
   #        java-version: 17
 
   #    - name: Grant execute permissions for gradlew
   #      run: chmod +x gradlew

   #    - name: Run unit tests
   #      run: ./gradlew test

   distribute:
      name: Distribute bundle to Google Play
      #needs: test
      runs-on: ubuntu-latest

      steps:
       - uses: actions/checkout@v4

      #  - name: Setup JDK 17
      #    uses: actions/setup-java@v4
      #    with:
      #     distribution: 'temurin'
      #     java-version: 17
      #     cache: 'gradle'

       - name: Version Bump
         id: version_bump
         uses: chkfung/android-version-actions@v1.2.3
         with:
           gradlePath: app/build.gradle.kts
           versionCode: ${{ github.run_number }}

       # - name: Assemble Release Bundle
       #   run: ./gradlew bundleRelease

       # - name: Sign Release
       #   uses: r0adkll/sign-android-release@v1
       #   with:
       #    releaseDirectory: app/build/outputs/bundle/release
       #    signingKeyBase64: ${{ secrets.KEYSTORE }}
       #    keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
       #    alias: ${{ secrets.KEY_ALIAS }}
       #    keyPassword: ${{ secrets.ANDROID_DEVS_ALIAS_PASSWORD }}
          
       # - name: Upload signed aab
       #   uses: actions/upload-artifact@v4.4.0
       #   with:
       #    name: signed-aab
       #    path: app/build/outputs/bundle/release/app-release.aab

       # - name: Setup Authorization with Google Play Store
       #   run: echo '${{ secrets.PLAY_AUTH_JSON }}' > service_account.json

       # - name: Deploy bundle to Google Play
       #   uses: r0adkll/upload-google-play@v1.1.3
       #   with:
       #    serviceAccountJson: service_account.json
       #    packageName: nl.jovmit.androiddevs.test
       #    releaseFiles: app/build/outputs/bundle/release/app-release.aab
       #    track: 'internal'
       #    status: 'completed'
       #    whatsNewDirectory: whatsNew/

       #- name: Determine Email Content
       #   id: determine_email_content
       #   run: |
       #    if [ "${{ steps.version_bump.outputs.status }}" == "success" ]; then
       #      echo "subject=Release Workflow Failed" >> $GITHUB_ENV
       #    else
       #      echo "subject=Release Workflow Completed" >> $GITHUB_ENV
       #    fi

       - name: Determine Email Content
         run: |
          if [ "${{ steps.version_bump.outcome }}" == "success" ]; then
            echo "subject=Release Workflow Completed" >> $GITHUB_ENV
            echo "body=The release workflow has been completed successfully." >> $GITHUB_ENV
          else
            echo "subject=Release Workflow Failed" >> $GITHUB_ENV
            echo "body=The release workflow has failed. Please check the logs." >> $GITHUB_ENV
          fi

       - name: Send Email Notification
         run: |
          echo "Subject: ${{ env.subject }}"
          echo "Body: ${{ env.body }}"

       
